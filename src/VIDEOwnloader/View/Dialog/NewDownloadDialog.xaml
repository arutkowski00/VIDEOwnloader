<UserControl x:Class="VIDEOwnloader.View.Dialog.NewDownloadDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:material="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:video="clr-namespace:VIDEOwnloader.Base.Video;assembly=VIDEOwnloader.Base"
             xmlns:model="clr-namespace:VIDEOwnloader.Model"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mvvmLight="http://www.galasoft.ch/mvvmlight"
             xmlns:materialConverter="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             DataContext="{Binding Source={StaticResource Locator}, Path=NewDownload}"
             Background="{DynamicResource MaterialDesignPaper}"
             Width="600"
             mc:Ignorable="d">
    <!-- SecondsToTimeStringConverter -->
    <UserControl.Resources>
        <materialConverter:MathConverter x:Key="SubstractMathConverter" Operation="Subtract" />

        <DataTemplate DataType="{x:Type video:Video}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <StackPanel VerticalAlignment="Top" Margin="0 4 0 0" x:Name="VideoSidebar">
                    <Grid>
                        <Image Source="{Binding Thumbnail}" Stretch="UniformToFill" Width="140" />
                        <TextBlock Background="#D5000000" Foreground="White" Margin="0 0 1 0" Padding="1 0"
                                   Text="{Binding Duration, Converter={StaticResource SecondsToTimeStringConverter}}"
                                   VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                    </Grid>
                    <material:RatingBar
                        Visibility="{Binding AverageRating, Converter={StaticResource NotZeroToVisibilityConverter}}"
                        Margin="0 8" HorizontalAlignment="Center" Value="{Binding AverageRating, Mode=OneWay}" />
                    <StackPanel HorizontalAlignment="Center">
                        <StackPanel.Resources>
                            <Style TargetType="material:Chip">
                                <Setter Property="Cursor" Value="Arrow" />
                            </Style>
                        </StackPanel.Resources>
                        <material:Chip IconBackground="#FF0D47A1" Margin="0 0 0 8"
                                       Visibility="{Binding ViewCount, Converter={StaticResource NotZeroToVisibilityConverter}}">
                            <material:Chip.Icon>
                                <material:PackIcon Kind="Eye" />
                            </material:Chip.Icon>
                            <Binding Path="ViewCount" Converter="{StaticResource NumberGroupSeparatorConverter}" />
                        </material:Chip>
                        <material:Chip IconBackground="#FF1B5E20" Margin="0 0 0 8"
                                       Visibility="{Binding LikeCount, Converter={StaticResource NotZeroToVisibilityConverter}}">
                            <material:Chip.Icon>
                                <material:PackIcon Kind="ThumbUp" />
                            </material:Chip.Icon>
                            <Binding Path="LikeCount" Converter="{StaticResource NumberGroupSeparatorConverter}" />
                        </material:Chip>
                        <material:Chip IconBackground="#FFB71C1C" Margin="0 0 0 8"
                                       Visibility="{Binding DislikeCount, Converter={StaticResource NotZeroToVisibilityConverter}}">
                            <material:Chip.Icon>
                                <material:PackIcon Kind="ThumbDown" />
                            </material:Chip.Icon>
                            <Binding Path="DislikeCount" Converter="{StaticResource NumberGroupSeparatorConverter}" />
                        </material:Chip>
                    </StackPanel>
                </StackPanel>
                <ScrollViewer Margin="8 0 0 0" Grid.Column="1" MinHeight="200"
                              MaxHeight="{Binding ActualHeight, ElementName=VideoSidebar}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="title" Grid.Row="0" Style="{DynamicResource MaterialDesignTitleTextBlock}"
                                   FontWeight="Bold" Text="{Binding Title}" />
                        <TextBlock x:Name="uploader" Grid.Row="1">
                            <Run Text="Uploader:" FontWeight="Bold" />
                            <Hyperlink NavigateUri="{Binding UploaderUrl}" ToolTip="Go to uploader's site">
                                <Run Text="{Binding Uploader}" />
                            </Hyperlink>
                        </TextBlock>
                        <TextBlock Text="{Binding Description}" Grid.Row="2" />
                    </Grid>
                </ScrollViewer>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type model:VideoPlaylist}">
            <StackPanel>
                <TextBlock x:Name="title" Style="{DynamicResource MaterialDesignTitleTextBlock}" FontWeight="SemiBold"
                           Text="{Binding Title}" />
                <ItemsControl ItemsSource="{Binding}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type model:VideoPlaylistItem}">
            <Border Padding="8" BorderThickness="0 0 0 1" BorderBrush="{DynamicResource MaterialDesignDivider}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="28" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ProgressBar
                        Visibility="{Binding IsFilling, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Margin="0 -6" Width="28" Height="28" IsIndeterminate="True"
                        Style="{DynamicResource MaterialDesignCircularProgressBar}" HorizontalAlignment="Left" />
                    <TextBlock
                        Grid.Column="0"
                        Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Converter={StaticResource IndexConverter}}"
                        VerticalAlignment="Center" FontWeight="SemiBold" HorizontalAlignment="Center" />
                    <TextBlock Margin="8 0 0 0" Grid.Column="1" Text="{Binding Title}" />
                    <StackPanel Orientation="Horizontal" Grid.Column="3">
                        <TextBlock x:Name="fileSize"
                                   Text="{Binding SelectedFormat.Filesize, Converter={StaticResource BytesToSizeStringConverter}}"
                                   Visibility="{Binding SelectedFormat, Converter={StaticResource NullableToVisibilityConverter}}" />
                        <TextBlock Margin="5 0" Text="/">
                            <TextBlock.Visibility>
                                <MultiBinding Converter="{StaticResource MultiVisibilityConverter}">
                                    <Binding ElementName="fileSize" Path="Visibility" />
                                    <Binding ElementName="durationText" Path="Visibility" />
                                </MultiBinding>
                            </TextBlock.Visibility>
                        </TextBlock>
                        <TextBlock x:Name="durationText"
                                   Text="{Binding Duration, Converter={StaticResource SecondsToTimeStringConverter}}"
                                   Visibility="{Binding IsFilled, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </StackPanel>
                </Grid>
            </Border>
        </DataTemplate>
    </UserControl.Resources>

    <material:DialogHost Identifier="NewDownloadDialogHost"
                         IsEnabled="{Binding IsProcessing, Converter={StaticResource NotConverter}}">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Loaded">
                <mvvmLight:EventToCommand Command="{Binding LoadedCommand}" />
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <Grid Margin="16">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock Style="{DynamicResource MaterialDesignHeadlineTextBlock}">New download</TextBlock>
            <TextBox Grid.Row="1" Margin="0 6 0 0"
                     Text="{Binding Url, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     FontSize="18" MinWidth="250" Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                <material:HintAssist.Hint>
                    <StackPanel Orientation="Horizontal">
                        <material:PackIcon Kind="Earth" VerticalAlignment="Center" Margin="0,0,4,0" />
                        <TextBlock>URL</TextBlock>
                    </StackPanel>
                </material:HintAssist.Hint>
            </TextBox>
            <Grid Grid.Row="2" Margin="0 13 0 0"
                  Visibility="{Binding ResultItem, Converter={StaticResource NullableToVisibilityConverter}}"
                  IsEnabled="{Binding IsProcessing, Converter={StaticResource NotConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Button x:Name="LocationButton" Command="{Binding ChooseSavePathCommand, ValidatesOnDataErrors=True}"
                        VerticalAlignment="Bottom"
                        Grid.Column="0" FontSize="16" HorizontalContentAlignment="Left"
                        Style="{DynamicResource MaterialDesignRaisedDarkButton}">
                    <StackPanel Orientation="Horizontal">
                        <material:PackIcon Kind="Folder" VerticalAlignment="Center" Margin="0 1 8 0"
                                           x:Name="LocationButtonIcon" />
                        <TextBlock Text="{Binding VideoFilename, Mode=OneWay, ValidatesOnDataErrors=True}"
                                   Width="{Binding ActualWidth, ElementName=LocationButton, Converter={StaticResource SubstractMathConverter}, ConverterParameter=56}"
                                   TextTrimming="CharacterEllipsis" />
                    </StackPanel>
                </Button>
                <ComboBox SelectedItem="{Binding VideoFormat, ValidatesOnDataErrors=True}" Margin="8 0 0 0"
                          MinWidth="130" Grid.Column="1" material:HintAssist.Hint="Format" FontSize="16"
                          ItemsSource="{Binding AvailableFormats, ValidatesOnDataErrors=True}"
                          VerticalAlignment="Bottom" Style="{DynamicResource MaterialDesignFloatingHintComboBox}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type video:VideoFormat}">
                            <StackPanel Orientation="Horizontal">
                                <material:PackIcon Kind="MusicNote"
                                                   Visibility="{Binding AudioOnly, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                   Margin="0 2 8 0" VerticalAlignment="Center" />
                                <material:PackIcon Kind="Video"
                                                   Visibility="{Binding HasAudioAndVideo, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                   Margin="0 2 8 0" VerticalAlignment="Center" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>
            <Expander Grid.Row="3" Margin="0 20 0 0" Header="URL details" FontSize="14" IsExpanded="True"
                      Visibility="{Binding ResultItem, Converter={StaticResource NullableToVisibilityConverter}}">
                <ContentControl Content="{Binding ResultItem}" />
            </Expander>
            <StackPanel Grid.Row="4" Orientation="Horizontal" Margin="0 16 0 0">
                <Button Name="GetButton" IsDefault="True" Style="{DynamicResource MaterialDesignFlatButton}"
                        Command="{Binding GetVideoInfoCommand}"
                        Visibility="{Binding NoResultItem, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Button.CommandParameter>
                        <system:Boolean>True</system:Boolean>
                    </Button.CommandParameter>
                    GET
                </Button>
                <Button x:Name="AddButton" IsDefault="True" Style="{DynamicResource MaterialDesignFlatButton}"
                        Command="{Binding CloseDialogCommand}"
                        Visibility="{Binding ResultItem, Converter={StaticResource NullableToVisibilityConverter}}">
                    <Button.CommandParameter>
                        <system:Boolean>True</system:Boolean>
                    </Button.CommandParameter>
                    ADD
                </Button>
                <Button IsCancel="True" Margin="8 0 0 0" Style="{DynamicResource MaterialDesignFlatButton}"
                        Command="{Binding CloseDialogCommand}">
                    <Button.CommandParameter>
                        <system:Boolean>False</system:Boolean>
                    </Button.CommandParameter>
                    CANCEL
                </Button>
            </StackPanel>
        </Grid>
    </material:DialogHost>
</UserControl>